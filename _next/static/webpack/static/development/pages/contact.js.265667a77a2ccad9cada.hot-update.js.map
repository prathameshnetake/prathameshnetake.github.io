{"version":3,"file":"static/webpack/static/development/pages/contact.js.265667a77a2ccad9cada.hot-update.js","sources":["webpack:///./components/Navbar/Navbar.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport classnames from \"classnames\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport AppBar from \"@material-ui/core/AppBar\";\nimport Toolbar from \"@material-ui/core/Toolbar\";\nimport Button from \"@material-ui/core/Button\";\nimport IconButton from \"@material-ui/core/IconButton\";\nimport MenuIcon from \"@material-ui/icons/Menu\";\nimport Drawer from \"../Drawer/Drawer.jsx\";\nimport Link from \"next/link\";\n\nconst styles = theme => ({\n  root: {},\n  menuButton: {\n    marginLeft: -12,\n    marginRight: 20\n  },\n  appBar: {\n    backgroundColor: \"transparent\",\n    boxShadow: \"none\",\n    [theme.breakpoints.down(\"sm\")]: {\n      backgroundColor: theme.palette.primary.main\n    }\n  },\n  navList: {\n    display: \"flex\",\n    margin: 0,\n    padding: 0,\n    flexGrow: 1,\n    justifyContent: \"flex-end\"\n  },\n  navLink: {\n    margin: \"0 1rem\",\n    fontWeight: 700,\n    \"&:hover\": {\n      background: \"transparent\"\n    },\n    \"&.active\": {\n      color: theme.palette.primary.main\n    },\n    \"&.active > span:first-child\": {\n      position: \"relative\"\n    },\n    \"&.active > span:first-child:before\": {\n      content: \"''\",\n      position: \"absolute\",\n      bottom: -3,\n      left: 0,\n      height: 3,\n      width: \"50%\",\n      background: \"black\",\n      borderBottom: `3px solid ${theme.palette.primary.main}`\n    }\n  },\n  tool: {\n    [theme.breakpoints.down(\"sm\")]: {\n      display: \"none\"\n    }\n  },\n  mobile: {\n    [theme.breakpoints.up(\"sm\")]: {\n      display: \"none\"\n    }\n  }\n});\n\nconst port = () => {\n  window.location = \"/portfolio\";\n};\n\nclass ButtonAppBar extends React.Component {\n  state = {\n    drawerOpen: false\n  }\n\n  handleDrawerClose = () => {\n    this.setState({drawerOpen: false});\n    this.forceUpdate();\n  }\n\n  openDrawer = () => {\n    this.setState({drawerOpen: true});\n  }\n\n  render() {\n    const {classes, active} = this.props;\n    return (\n      <div className={classes.root}>\n        <Drawer open={this.state.drawerOpen} handleClose={this.handleDrawerClose} active={this.props.active}/>\n        <AppBar position=\"static\" className={classes.appBar}>\n          <Toolbar className={classes.tool}>\n            <ul className={classes.navList}>\n              <li>\n                <Link href=\"/\">\n                  <Button className={classnames(classes.navLink, {active: active === \"home\"})}>Home</Button>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/about\" prefetch>\n                  <Button className={classnames(classes.navLink, {active: active === \"about\"})}>About</Button>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/portfolio\" prefetch>\n                  <Button className={classnames(classes.navLink, {active: active === \"portfolio\"})} onClick={port}>Portfolio</Button>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/experience\" prefetch>\n                  <Button className={classnames(classes.navLink, {active: active === \"experience\"})}>Experience</Button>\n                </Link>\n              </li>\n              <li>\n                <Link href=\"/contact\" prefetch>\n                  <Button className={classnames(classes.navLink, {active: active === \"contact\"})}>Contact</Button>\n                </Link>\n              </li>\n            </ul>\n          </Toolbar>\n          <Toolbar className={classes.mobile}>\n            <IconButton className={classes.menuButton} color=\"inherit\" aria-label=\"Menu\" onClick={this.openDrawer}>\n              <MenuIcon />\n            </IconButton>\n          </Toolbar>\n        </AppBar>\n      </div>\n    );\n  }\n}\n\nButtonAppBar.propTypes = {\n  classes: PropTypes.object.isRequired,\n  active: PropTypes.string.isRequired\n};\n\nexport default withStyles(styles)(ButtonAppBar);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAFA;AAIA;AACA;AACA;AAFA;AAIA;AADA;AAIA;AACA;AACA;AACA;AACA;AACA;AALA;AAOA;AACA;AACA;AACA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AADA;AAGA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AARA;AAZA;AAuBA;AAEA;AADA;AAIA;AAEA;AADA;AAjDA;AAAA;AACA;AAsDA;AACA;AACA;AACA;AACA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;AAGA;AACA;AAAA;AAAA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AACA;AACA;;;;;;AACA;AAAA;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAMA;;;;AAzDA;AACA;AA2DA;AACA;AACA;AAFA;AAKA;;;;A","sourceRoot":""}