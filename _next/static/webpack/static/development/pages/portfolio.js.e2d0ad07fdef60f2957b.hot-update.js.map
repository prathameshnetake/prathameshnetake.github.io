{"version":3,"file":"static/webpack/static/development/pages/portfolio.js.e2d0ad07fdef60f2957b.hot-update.js","sources":["webpack:///./components/Portfolio/Portfolio.jsx"],"sourcesContent":["import React from \"react\";\nimport PropTypes from \"prop-types\";\nimport {withStyles} from \"@material-ui/core/styles\";\nimport {get} from \"jquery\";\nimport Card from \"@material-ui/core/Card\";\nimport CardActionArea from \"@material-ui/core/CardActionArea\";\nimport CardActions from \"@material-ui/core/CardActions\";\nimport CardContent from \"@material-ui/core/CardContent\";\nimport CardMedia from \"@material-ui/core/CardMedia\";\nimport Button from \"@material-ui/core/Button\";\nimport Typography from \"@material-ui/core/Typography\";\n\nconst blogData = require(\"../../content/blogs.json\");\n\nconst styles = () => ({\n  root: {\n    flexGrow: 1,\n    marginLeft: 50,\n    backgroundPosition: 0,\n    display: \"flex\",\n    flexDirection: \"column\",\n    justifyContent: \"center\",\n    padding: \"2rem\"\n  },\n  card: {\n    maxWidth: 345\n  },\n  media: {\n    // ⚠️ object-fit is not supported by IE 11.\n    objectFit: \"cover\"\n  }\n});\n\nclass Portfolio extends React.Component {\n  state = {\n    blogs: []\n  }\n  getBlogData = async () => {\n    const data = {\n      rss_url: blogData.mediumUrl\n    };\n    get(blogData.rss2json, data, response => {\n      const item = response.items[0];\n      const yourString = item.description.replace(/<img[^>]*>/g, \"\"); // replace with your string.\n      console.log(yourString);\n      const maxLength = 120; // maximum number of characters to extract\n      // trim the string to the maximum length\n      let trimmedString = yourString.substr(0, maxLength);\n      // re-trim if we are in the middle of a word\n      trimmedString = trimmedString.substr(0, Math.min(trimmedString.length, trimmedString.lastIndexOf(\" \")));\n      console.log(trimmedString);\n      this.setState({blogs: response.items});\n    });\n  }\n  componentDidMount = () => {\n    this.getBlogData().then(data => {\n      console.log(data);\n    });\n  }\n  render() {\n    const {classes} = this.props;\n    return (\n      <div className={classes.root}>\n        {this.state.blogs.map(blog => <div key={blog.guid}>\n          <Card className={classes.card}>\n            <CardActionArea>\n              <CardMedia\n                component=\"img\"\n                alt={blog.title}\n                className={classes.media}\n                height=\"140\"\n                image={blog.thumbnail}\n                title={blog.title}\n              />\n              <CardContent>\n                <Typography gutterBottom variant=\"h5\" component=\"h2\">\n                  {blog.title}\n                </Typography>\n                <Typography component=\"p\">\n                  this is some card description\n                </Typography>\n              </CardContent>\n            </CardActionArea>\n            <CardActions>\n              <Button size=\"small\" color=\"primary\">\n          Share\n              </Button>\n              <Button size=\"small\" color=\"primary\">\n          Learn More\n              </Button>\n            </CardActions>\n          </Card>\n        </div>)}\n      </div>\n    );\n  }\n}\n\nPortfolio.propTypes = {\n  classes: PropTypes.object.isRequired\n};\n\nexport default withStyles(styles)(Portfolio);\n"],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AACA;AAPA;AASA;AACA;AADA;AAGA;AACA;AACA;AAFA;AAbA;AAAA;AACA;AAkBA;;;;;;;;;;;;;;;;;;AACA;AACA;AADA;AACA;;;;;AAEA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AACA;AADA;AAGA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AAAA;AACA;AACA;AACA;AACA;AAAA;AAAA;AAAA;AACA;AACA;AAhBA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAgBA;AACA;AACA;AACA;AACA;AACA;;;;;;AAAA;AAAA;AAEA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAEA;AACA;AACA;AACA;AACA;AACA;AANA;AAAA;AAAA;AAAA;AAAA;AAAA;AAQA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAKA;AAAA;AAAA;AAAA;AAAA;AAAA;AACA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAGA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAxBA;AAgCA;;;;AA9DA;AACA;AAgEA;AACA;AADA;AAIA;;;;A","sourceRoot":""}